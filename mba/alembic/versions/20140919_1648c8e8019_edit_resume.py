"""edit_resume



Revision ID: 1648c8e8019

Revises: 1a430892d72c

Create Date: 2014-09-19 18:50:13.978000



"""



# revision identifiers, used by Alembic.

revision = '1648c8e8019'

down_revision = '1a430892d72c'



from alembic import op

import sqlalchemy as sa




import  sqlite3
from alembic import context
config = context.config



class SqliteOp():


    def __init__(self):

        url = config.get_section_option('app:mba', "sqlalchemy.url", None)



        if url.startswith('sqlite:///'):
            self.dbpath =  url.split('///')[1]
        else:
            raise EnvironmentError("Not Sqlite database")


        self.conn = sqlite3.connect(self.dbpath)
        self.cursor = self.conn.cursor()


    def __del__(self):
        self.cursor.close()
        self.conn.close()



    def save_table_data(self, tablename):

        self.cursor.execute("SELECT * FROM  %s "  % tablename)
        self.conn.commit()
        all = self.cursor.fetchall()
        return all

    def delete_table(self, tablename):
        self.cursor.execute("DELETE FROM %s " % tablename);
        self.conn.commit()


    def restore_table_data(self, tablename, datalist):
        if datalist:
            col = ['?'] * len( datalist[0] )
            col2 = ','.join(col )

            self.cursor.executemany("""INSERT INTO %s VALUES (%s)""" % (tablename,col2) , datalist )

            self.conn.commit()

sqliteop = SqliteOp()


def alter_table_value(data):


    def syntax(col):
        col = list(col)
        col = col[0:1] + col[3:]
        col = tuple(col)

        return col


    return map(syntax, data)



def upgrade():

    saved = sqliteop.save_table_data('resumes')

    saved = alter_table_value(saved)

    op.drop_table('resumes')

    op.create_table('resumes',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('create_date', sa.DATETIME(), nullable=True),
    sa.Column('modify_date', sa.DATETIME(), nullable=True),
    sa.Column('job_order', sa.VARCHAR(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    ### end Alembic commands ###

    sqliteop.restore_table_data('resumes', saved)



def downgrade():

    ### commands auto generated by Alembic - please adjust! ###
    return
    ### end Alembic commands ###

